---
layout: post
title:  "深入分析 GCC 读书笔记（7）"
date: 2020-08-03 08:50:15 +0000   
---

第 10 章 GIMPLE 到 RTL 转换
--------------------------

对应 PASS 的名字是 pass_expand，处理函数是 pass_expand::execute，
所在文件是 gcc/cfgexpand.c。

调用栈信息如下。

```
#0  (anonymous namespace)::pass_expand::execute (this=0x2dc2ae0, fun=0xffffaf560000) at ../../gcc-debug/gcc/cfgexpand.c:6376
#1  0x000000000119a7c8 in execute_one_pass (pass=0x2dc2ae0) at ../../gcc-debug/gcc/passes.c:2509
#2  0x000000000119ab7c in execute_pass_list_1 (pass=0x2dc2ae0) at ../../gcc-debug/gcc/passes.c:2597
#3  0x000000000119ac28 in execute_pass_list (fn=0xffffaf560000, pass=0x2dbed40) at ../../gcc-debug/gcc/passes.c:2608
#4  0x0000000000c497c4 in cgraph_node::expand (this=0xffffaf510708) at ../../gcc-debug/gcc/cgraphunit.c:2301
#5  0x0000000000c4a540 in output_in_order () at ../../gcc-debug/gcc/cgraphunit.c:2579
#6  0x0000000000c4ad88 in symbol_table::compile (this=0xffffaf230000) at ../../gcc-debug/gcc/cgraphunit.c:2820
#7  0x0000000000c4b2f0 in symbol_table::finalize_compilation_unit (this=0xffffaf230000) at ../../gcc-debug/gcc/cgraphunit.c:3003
#8  0x00000000012f6d4c in compile_file () at ../../gcc-debug/gcc/toplev.c:483
#9  0x00000000012fb01c in do_compile () at ../../gcc-debug/gcc/toplev.c:2307
#10 0x00000000012fb3f0 in toplev::main (this=0xfffffffff188, argc=2, argv=0xfffffffff2d8) at ../../gcc-debug/gcc/toplev.c:2446
#11 0x00000000022e5ccc in main (argc=2, argv=0xfffffffff2d8) at ../../gcc-debug/gcc/main.c:39
```

调试过程中可以使用以下函数查看相关信息：
* get_insns() / get_current_sequence()->first 获得第一个 INSN，通常是一个 NOTE 节点
* get_current_sequence() 获得 {first, last, next} 信息

API：
* start_sequence  对 "current_sequence" 进行暂存和清空
* end_sequence 对 "current_sequence" 进行恢复

主要处理过程：
1. expand_used_vars 对变量进行展开，自动变量展开后的 rtx_code 为 MEM，
   临时变量展开后的 rtx_code 为 REG（虚拟寄存器）。