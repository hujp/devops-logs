---
layout: post
title:  "深入分析 GCC 读书笔记（6）"
date: 2020-07-01 08:50:15 +0000   
---

第 9 章 机器描述文件${target}.[ch]
---------------------------------

### gcc_target 结构体

gcc/config/${target}/${target}.c 中会对 gcc_target 结构体进行初始化。

```
struct gcc_target targetm = TARGET_INITIALIZER;
```

TARGET_INITIALIZER 宏是一个包含很多小宏的大宏，GCC 为每一个小宏提供了默认的实现，
而具体的目标机器实现时可以覆盖默认的小宏，然后再像上面这样调用 TARGET_INITIALIZER。
如此设计的目的是方便 GCC 添加目标机器的共通定义而不需要修改每一种实现。

* gcc/target.def
  TARGET_INITIALIZER 宏定义，这里还包含各个宏的用法说明。
  这里也是 gcc_target 结构体定义的地方。各个宏的第一个参数给出了成员的名字。
  HOOK_VECTOR/HOOK_VECTOR_END 直接定义在 target-hooks-macros.h 中，
  被 target.def 包含，已第二个宏参数为名字定义一个结构体的开始与结束。
  要包含 target.def，需要定义/重定义以下几个宏：
    - HOOKSTRUCT target-hooks-macros.h 中的默认定义为空，所以如果不重定义这个宏的话，无法做到定义 HOOK_VECTOR 想定义的结构体。
    - DEFHOOKPOD target-hooks-macros.h 中未定义。这个宏定义成员，比如取值 `TYPE NAME；`
    - DEFHOOK target-hooks-macros.h 中未定义。这个宏定义成员函数
    - DEFHOOK_UNDOC target-hooks-macros.h 中未定义。这个宏也定义成员函数。

  这里的宏定义没有使用到全部的宏参数，比如 HOOK_VECTOR 的第一个参数，比如 DEFHOOKPOD
  的第一、二个参数。它们是 GCC 提供的相应结构体的初始化宏，和各个成员/成员函数相关的
  文档说明，它们是给 genhooks 等处理使用的。

* gcc/target-hooks-def.h
  这个文件是编译的时候生成的，是 TARGET_INITIALIZER 包含的小宏的默认定义

### 编译驱动机制和 SPEC 语言

gcc 命令是一个编译驱动，根据命令选项调用正确的编译器（如 cc1）/ 汇编器 as / 链接器 ld，
并传递相应的选项和参数。

SPEC 语言指示符：

| 指示符 | 意义 |
| ----  | ---- |
| %command | 处理命令 |
| *[spec_name]: | 建立、覆盖、删除 SPEC |
| [suffix]: | 建议一个后缀 spec 描述，@language 表示属于某种语言，#name 生成提示信息 |

gcc -dumpspecs 可以查询默认的 spec 描述。

目标机器提供的编译选项（march、mcpu 等）由 gcc/config/${target}/${target}.c 中的
OPTION_DEFAULT_SPECS 提供，在 gcc/gcc.c 中被添加到 option_default_specs 数组中。

### 存储布局

gcc/config/aarch64/aarch64.h 文件中定义了存储顺序、字宽度、存储对齐、数据类型宽度。

### 寄存器

gcc/config/aarch64/aarch64.h 文件中定义了 FIRST_PSEUDO_REGISTER，而该定义用到了
FFRT_REGNUM，FFRT_REGNUM 是由 aarch64.md 定义的常量，经过编译之后生成在
gcc/insn_constants.h 中，值为 85。