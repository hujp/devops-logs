---
layout: post
title:  "2021.12"
date: 2021-12-01 08:50:15 +0000   
---

这里记录我工作中学到的技术、解决的案例、和获得的体会。每月更新！


技术
----

### [bash 的 set 命令](http://www.ruanyifeng.com/blog/2017/11/bash-set.html)

有的脚本语言的 set 命令和变量有关，bash 的 set 命令不是这样，而且在实际应用中还特别重要。

### [curl 发送 https 请求](https://curl.se/docs/sslcerts.html)

浏览器访问自签名证书网站时，用户可以选择忽略经过继续访问。curl 也可以，最简单的就是使用 -k 选项。注意如果使用代理时，要区分想忽略的是客户机和代理机之间的验证，还是代理机和网站之间的验证。

### [Log4SHELL](https://sspai.com/post/70394)

Log4j 模块的漏洞的形象说明。更值得关注的是它引起的思考，软件组件功能涉及的权限（读写、执行、访问网络）是否合适！

### [AWS Lambda](https://zhuanlan.zhihu.com/p/106513886)

AWS Lambda 是一种 Serverless 实现。在各种编程语言中，Lambda 表达式其实都是一种匿名函数，AWS Lambda 本质上也是函数服务（FaaS)。AWS Lambda 底层采用容器技术来运行用户代码（函数）。用户按需使用，按需付费。

### [LuaJIT FFI](https://blog.csdn.net/linuxheik/article/details/53160920)

Lua是一种脚本语言，也是一种可以执行这种语言脚本的解释器。LuaJIT和Lua一样是一种Lua解释器，而且效率更高。FFI是LuaJIT的一个库，用于在Lua代码中调用C代码。另外，Lua本身也有用于调用C代码的API。两者的区别之一是搜索C库文件的路径不同，FFI从系统库文件搜索，Lua C API从lua_package_cpath指定的路径搜索。

### [软件包管理]()

操作系统和开发框架以及开发语言都可能有自己的软件包管理器。
* Ubuntu  [apt]() & [dpkg]()
* CentOS  [yum]() / [dnf]() & [rpm]()
* Solaris [pkg]() & [pkg*]()
* Python  [pip](https://pypi.org/project/pip/)
* Ruby    [gem](https://rubygems.org/)
* Lua     [luarocks](https://luarocks.org/)
* JS      [npm](https://www.npmjs.com/)
* Java    [maven](https://maven.apache.org/)
* C/C++   [conan](https://conan.io/)
* Go      [go mod](https://github.com/golang/go/wiki/Modules)

### [Kong](https://docs.konghq.com/)

是一种API Gateway。基于OpenResty/Nginx。Nginx是一款Web容器和反向代理服务器，支持添加lua-nginx-module模块以用于插件开发，使用灵活性和性能表现卓越。OpenResty以Nginx作为模块之一，默认包含lua-nginx-module模块，并开发了很多其他的实用模块，成为了一款优秀的Web应用开发和运行环境。Kong则在OpenResty基础之上，开发了CLI、Admin API、PDK（plugin development kit）等模块，通过运行nginx进程以及与数据库交互等逻辑代码，提供了路由、限速、缓存、认证、负载均衡等API网关功能。

### XSS TODO

是一种Web脚本攻击方式。

1. 如果是通过正常的用户接口注入攻击脚本，那么最终攻击的不还是自己吗？如果是正常的用户请求被中间人篡改，那么中间人不可以篡改服务器的响应吗，那样的话还需要什么漏洞，没有漏洞照样注入任意代码啊？

### [kafka](https://blog.csdn.net/weixin_45366499/article/details/106943229) 

是一种分布式消息队列工具。TODO

### Linux 内核内存子系统 TODO

1. 通常虚拟地址和物理地址的位数是一样的，比如说48位，那为什么不直接用虚拟地址作为物理地址，而需要通过4级或者3级页表进行映射呢？
2. 页表是属于系统级别的，还是进程级别的？
3. 页表和cache是什么关系？


案例
----

空空如也。


体会
----

有些人喜欢把简单的工作说得很了不起，喜欢津津有味地说一些其实很无聊或者很私人的话题。重要的是，你知道其实并没有什么了不起，你知道那样聊是不对的，而不是认为自己平凡或者无趣。